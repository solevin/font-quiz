# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Setup flutter environment'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.3'
          channel: 'stable'
          cache: true

      - name: 'Cache pubspec dependencies'
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            build-pubspec-
#       - uses: actions/checkout@v3

#       # Note: This workflow uses the latest stable version of the Dart SDK.
#       # You can specify other versions if desired, see documentation here:
#       # https://github.com/dart-lang/setup-dart/blob/main/README.md
#       # - uses: dart-lang/setup-dart@v1
#       - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

#       - name: Install dependencies
#         run: dart pub get

#       # Uncomment this step to verify the use of 'dart format' on each commit.
#       # - name: Verify formatting
#       #   run: dart format --output=none --set-exit-if-changed .

#       # Consider passing '--fatal-infos' for slightly stricter analysis.
#       - name: Analyze project source
#         run: dart analyze

#       # Your project will need to have tests in test/ and a dependency on
#       # package:test for this step to succeed. Note that Flutter projects will
#       # want to change this to 'flutter test'.
#       - name: Run tests
#         run: dart test
