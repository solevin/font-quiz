# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter CI

on:
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 100

      - name: test
        run: |
          echo ${{ github.event.pull_request }}

      # - name: Setup flutter environment
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: '3.7.7'
      #     channel: 'stable'
      #     cache: true

      # - name: Cache pubspec dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ${{ env.FLUTTER_HOME }}/.pub-cache
      #       **/.packages
      #       **/.flutter-plugins
      #       **/.flutter-plugin-dependencies
      #       **/.dart_tool/package_config.json
      #     key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
      #     restore-keys: |
      #       build-pubspec-

      # - name: Get flutter packages
      #   run: flutter pub get

      # - name: Add problem matcher
      #   run: echo "::add-matcher::.github/analyzer-problem-matcher.json"

      # - name: Check lint
      #   run: flutter analyze | tee ./flutter_analyze_report.txt

      # - name: Run unit test
      #   run: flutter test --coverage --coverage-path=./coverage/lcov.info --machine > flutter_test_report.txt

      # - name: Report test result
      #   uses: dorny/test-reporter@v1
      #   if: always()
      #   with:
      #     name: 'flutter test'
      #     path: 'flutter_test_report.txt'
      #     reporter: 'flutter-json'
      #     fail-on-error: 'false'

      # - name: Upload a coverage report to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: ./coverage/lcov.info

      # - name: Extract changed files
      #   id: extract_changed_files
      #   run: |
      #     : # git fetch
      #     git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}
      #     git branch -a
      #     git diff --diff-filter=d --name-only HEAD ${{ github.base_ref }}
      #     : # CHANGED_FILES=$(git diff --diff-filter=d --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }})
      #     : # CHANGED_FILES="${CHANGED_FILES//'%'/'%25'}"
      #     : # CHANGED_FILES="${CHANGED_FILES//$'\n'/'%0A'}"
      #     : # CHANGED_FILES="${CHANGED_FILES//$'\r'/'%0D'}"
      #     : # echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      # - name: Check code metrics
      #   run: |
      #     flutter pub run dart_code_metrics:metrics analyze lib --reporter=console > dart-code-metrics_analyze_report.txt || true

      # - name: Annotation
      #   if: always()
      #   run: |
      #     CHANGED_FILES="${{ steps.extract_changed_files.outputs.changed_files }}"
      #     CHANGED_FILES="${CHANGED_FILES//'%0A'/$'\n'}"
      #     CHANGED_FILES="${CHANGED_FILES//'%0D'/$'\r'}"
      #     CHANGED_FILES="${CHANGED_FILES//'%25'/'%'}"
      #     CHANGED_FILES="${CHANGED_FILES//'.'/"\."}"
      #     CHANGED_FILES="${CHANGED_FILES//'/'/"\/"}"
      #     echo "$CHANGED_FILES"
      #     for FILE in $CHANGED_FILES; do
      #       echo "$FILE"
      #       grep -1 -E ".*$FILE.*" dart-code-metrics_analyze_report.txt || [[ $? == 1 ]]
      #     done

      # - name: Remove problem matcher
      #   if: always()
      #   run: echo "::remove-matcher owner=dart-analyzer::"

      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   if: always()
      #   with:
      #     ruby-version: '2.7'

      # - name: Install bundler
      #   run: gem install bundler

      # - name: Create pull-req omment 
      #   uses: MeilCli/danger-action@v5
      #   if: always()
      #   with:
      #     plugins_file: '.github/Gemfile'
      #     install_path: 'vendor/bundle'
      #     danger_file: '.github/Dangerfile'
      #     danger_id: 'danger-pr'
      #   env:
      #     DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
