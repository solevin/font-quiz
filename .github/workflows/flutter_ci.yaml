# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter CI

on:
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 100

      - name: Setup flutter environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.7'
          channel: 'stable'
          cache: true

      - name: Cache pubspec dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            build-pubspec-

      - name: Get flutter packages
        run: flutter pub get

      # - name: Add problem matcher
      #   run: echo "::add-matcher::.github/analyzer-problem-matcher.json"

      - name: Check lint
        run: flutter analyze | tee ./flutter_analyze_report.txt

      - name: Run unit test
        run: flutter test --coverage --coverage-path=./coverage/lcov.info --machine > test_report.log

      - name: Report test result
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: 'flutter test'
          path: 'test_report.log'
          reporter: 'flutter-json'
          fail-on-error: 'false'

      - name: Upload a coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:  
          files: ./coverage/lcov.info

      # - name: Run satic analysis
      #   run: flutter pub run dart_code_metrics:metrics analyze lib --reporter=console

      # - name: Remove problem matcher
      #   if: always()
      #   run: echo "::remove-matcher owner=dart-analyzer::"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: always()
        with:
          ruby-version: '2.7'

      # Install the right bundler version
      - name: Install bundler
        run: gem install bundler

      - name: Danger
        uses: MeilCli/danger-action@v5
        if: always()
        with:
          plugins_file: '.github/Gemfile'
          install_path: 'vendor/bundle'
          danger_file: '.github/Dangerfile'
          danger_id: 'danger-pr'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}